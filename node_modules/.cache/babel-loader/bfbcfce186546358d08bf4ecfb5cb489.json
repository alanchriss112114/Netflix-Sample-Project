{"ast":null,"code":"var _jsxFileName = \"/media/user/Local Disk/Work Space/netflix/src/Components/RowPost/RowPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport { imageUrl } from '../../Constants/Constants';\nimport axios from '../../Axios';\nimport YouTube from 'react-youtube';\nimport { API_KEY } from '../../Constants/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovies = id => {\n    console.log(id);\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&l`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovies(movie.id),\n        src: `${imageUrl + movie.backdrop_path}`,\n        alt: \"\",\n        className: props.isSmall ? 'smallPoster' : 'poster'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      opts: opts,\n      videoId: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RowPost, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"sources":["/media/user/Local Disk/Work Space/netflix/src/Components/RowPost/RowPost.jsx"],"names":["React","useEffect","useState","imageUrl","axios","YouTube","API_KEY","RowPost","props","movies","setMovies","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","handleMovies","id","title","map","movie","backdrop_path","isSmall"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACO,GAAN,CAAUH,KAAK,CAACI,GAAhB,EAAqBC,IAArB,CAA2BC,QAAD,IAAY;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;AACAR,MAAAA,SAAS,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAMA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHH,GAAb;;AAQA,QAAMC,YAAY,GAAEC,EAAD,IAAM;AACrBV,IAAAA,OAAO,CAACC,GAAR,CAAYS,EAAZ;AACArB,IAAAA,KAAK,CAACO,GAAN,CAAW,UAASc,EAAG,mBAAkBnB,OAAQ,IAAjD;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKE,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKjB,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBACR;AAAK,QAAA,OAAO,EAAE,MAAIJ,YAAY,CAACI,KAAK,CAACH,EAAP,CAA9B;AAA0C,QAAA,GAAG,EAAG,GAAEtB,QAAQ,GAACyB,KAAK,CAACC,aAAc,EAA/E;AAAkF,QAAA,GAAG,EAAC,EAAtF;AAAyF,QAAA,SAAS,EAAErB,KAAK,CAACsB,OAAN,GAAgB,aAAhB,GAA8B;AAAlI;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEX,IAAf;AAAqB,MAAA,OAAO,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA/BQZ,O;;KAAAA,O;AAiCT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport {imageUrl} from '../../Constants/Constants'\nimport axios from '../../Axios'\nimport YouTube from 'react-youtube'\nimport {API_KEY} from '../../Constants/Constants'\n\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    useEffect(() => {\n        axios.get(props.url).then((response)=>{\n            console.log(response.data.results);\n            setMovies(response.data.results)\n        })\n    }, [])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n        },\n      };\n    const handleMovies=(id)=>{\n        console.log(id)\n        axios.get(`/movie/${id}/videos?api_key=${API_KEY}&l`)\n    }\n    return (\n        <div className='row'>\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n                {movies.map((movie)=>\n                    <img onClick={()=>handleMovies(movie.id)} src={`${imageUrl+movie.backdrop_path}`} alt=\"\" className={props.isSmall ? 'smallPoster':'poster'} />\n                )}\n            </div>\n            <YouTube opts={opts} videoId=''/>\n        </div>\n    )\n}\n\nexport default RowPost\n"]},"metadata":{},"sourceType":"module"}